{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography } from '@material-ui/core';\nimport axios from \"axios\";\nimport FeedPokemon from '../components/FeedPokemon/FeedPokemon';\nvar url = \"https://pokeapi.co/api/v2/pokemon?limit=104\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    slideContainer: _defineProperty({\n      marginTop: \"-94px\"\n    }, theme.breakpoints.down(\"sm\"), {\n      marginTop: \"0px\"\n    })\n  };\n});\n\nvar pokemonPage = function pokemonPage(props) {\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      dataPokemon = _useState[0],\n      setDataPokemon = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  useEffect(function () {\n    var fetchPokemon = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, promises, responseData, sendPropData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(url);\n\n              case 2:\n                response = _context.sent;\n                promises = [];\n                response.data.results.forEach(function (result) {\n                  promises.push(axios.get(result.url));\n                });\n                _context.next = 7;\n                return Promise.all(promises);\n\n              case 7:\n                responseData = _context.sent;\n                sendPropData = responseData.map(function (item) {\n                  return {\n                    data: item.data\n                  };\n                });\n                setDataPokemon(sendPropData);\n                setIsLoading(false);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchPokemon() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchPokemon();\n  }, []);\n  return /*#__PURE__*/_jsxs(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsx(Grid, {\n      className: classes.containerTitle,\n      children: /*#__PURE__*/_jsx(Typography, {\n        variant: \"h3\",\n        gutterBottom: true,\n        children: \" Test Fetch API\"\n      })\n    }), /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsx(FeedPokemon, {\n        data: dataPokemon,\n        isLoading: isLoading\n      }), /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        spacing: 2\n      })]\n    })]\n  });\n};\n\nexport default pokemonPage;","map":null,"metadata":{},"sourceType":"module"}